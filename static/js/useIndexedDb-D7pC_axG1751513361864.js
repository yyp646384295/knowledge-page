import{T as e,B as n,C as t}from"./index-OWeuetou1751513361864.js";import{c4 as r,c5 as s,bU as o,c7 as a,bX as c}from"./chunk-vendor-C4HKfta71751513361864.js";import"./chunk-element-plus-nGWwAefB1751513361864.js";import"./chunk-vue-router-DlU29Ka71751513361864.js";import"./chunk-pinia-Ds0_iFQX1751513361864.js";import"./chunk-nprogress-DVqohuhc1751513361864.js";import"./chunk-axios-rSMZb3Ae1751513361864.js";const u={__name:"useIndexedDb",setup:u=>(u,l)=>{const d=n,i=e;return o(),r(i,{title:"IndexedDB 使用"},{default:s((()=>[a(d,null,{default:s((()=>l[0]||(l[0]=[c("p",null,"适合存储 大量复杂数据（如应用缓存、用户订单记录），支持对象存储、事务和查询。容量可达 GB级",-1),c("p",null,"需要事务管理",-1),c("p",null,"异步操作不阻塞页面",-1),c("p",null,"支持复杂查询和索引(比localStorage快得多)",-1)]))),_:1,__:[0]}),a(t,{code:'\n// 打开或创建数据库\nconst request = indexedDB.open("myDatabase", 1);\n\nrequest.onupgradeneeded = (event) => {\n  const db = event.target.result;\n\n  // 创建对象仓库（类似数据表），主键为 id\n  if (!db.objectStoreNames.contains("users")) {\n    db.createObjectStore("users", { keyPath: "id" });\n  }\n};\n\nrequest.onsuccess = (event) => {\n  const db = event.target.result;\n\n  // 插入数据\n  const tx = db.transaction("users", "readwrite");\n  const store = tx.objectStore("users");\n\n  store.add({ id: 1, name: "Alice", age: 30 });\n  store.add({ id: 2, name: "Bob", age: 25 });\n\n  tx.oncomplete = () => {\n    console.log("数据写入成功");\n\n    // 查询所有数据\n    const readTx = db.transaction("users", "readonly");\n    const readStore = readTx.objectStore("users");\n    const getAllRequest = readStore.getAll();\n\n    getAllRequest.onsuccess = () => {\n      console.log("读取到的数据:", getAllRequest.result);\n    };\n  };\n\n  tx.onerror = (event) => {\n    console.error("事务出错：", event.target.error);\n  };\n};\n\nrequest.onerror = (event) => {\n  console.error("打开数据库失败：", event.target.error);\n};\n'})])),_:1})}};export{u as default};
